{"ast":null,"code":"var _s = $RefreshSig$();\n// components/useScrollSnap.js\nimport { useEffect, useRef } from \"react\";\nimport { gsap } from \"gsap\";\nimport { ScrollToPlugin } from \"gsap/ScrollToPlugin\";\ngsap.registerPlugin(ScrollToPlugin);\nexport default function useScrollSnap({\n  selector = \"section\",\n  duration = 0.8,\n  deadZone = 0.2\n}) {\n  _s();\n  useEffect(() => {\n    let timeout;\n    let isAnimating = false;\n    const lastScrollY = {\n      current: window.scrollY\n    };\n    const sections = Array.from(document.querySelectorAll(selector));\n    const scrollToY = y => {\n      isAnimating = true;\n      gsap.to(window, {\n        scrollTo: y,\n        duration,\n        ease: \"power2.out\",\n        onComplete: () => isAnimating = false\n      });\n    };\n    const onScroll = () => {\n      if (isAnimating) return;\n      if (timeout) clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        const scrollY = window.scrollY;\n        const viewportHeight = window.innerHeight;\n\n        // detect scroll direction\n        const direction = scrollY > lastScrollY.current ? \"down\" : \"up\";\n        lastScrollY.current = scrollY;\n\n        // find current section index\n        let currentIndex = sections.findIndex(el => {\n          const elTop = el.offsetTop;\n          const elHeight = el.offsetHeight;\n          const elBottom = elTop + elHeight;\n          return scrollY >= elTop && scrollY < elBottom;\n        });\n\n        // fallback if we’re above first section or below last section\n        if (currentIndex === -1) {\n          currentIndex = scrollY < sections[0].offsetTop ? 0 : sections.length - 1;\n        }\n\n        // if section is taller than viewport and we’re in deadzone → don’t snap\n        const el = sections[currentIndex];\n        const elTop = el.offsetTop;\n        const elHeight = el.offsetHeight;\n        const elBottom = elTop + elHeight;\n        const deadZoneTop = elTop + elHeight * deadZone;\n        const deadZoneBottom = elBottom - elHeight * deadZone;\n        if (elHeight > viewportHeight && scrollY > deadZoneTop && scrollY < deadZoneBottom) {\n          return; // allow free scroll inside deadzone\n        }\n\n        // pick next or prev section based on direction\n        let targetIndex = currentIndex;\n        if (direction === \"down\" && currentIndex < sections.length - 1) {\n          targetIndex = currentIndex + 1;\n        } else if (direction === \"up\" && currentIndex > 0) {\n          targetIndex = currentIndex - 1;\n        }\n        scrollToY(sections[targetIndex].offsetTop);\n      }, 200);\n    };\n    window.addEventListener(\"scroll\", onScroll);\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, [selector, duration, deadZone]);\n}\n_s(useScrollSnap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"names":["useEffect","useRef","gsap","ScrollToPlugin","registerPlugin","useScrollSnap","selector","duration","deadZone","_s","timeout","isAnimating","lastScrollY","current","window","scrollY","sections","Array","from","document","querySelectorAll","scrollToY","y","to","scrollTo","ease","onComplete","onScroll","clearTimeout","setTimeout","viewportHeight","innerHeight","direction","currentIndex","findIndex","el","elTop","offsetTop","elHeight","offsetHeight","elBottom","length","deadZoneTop","deadZoneBottom","targetIndex","addEventListener","removeEventListener"],"sources":["C:/Users/georg/projects/Fullstack/portofolio-2.0/client/src/components/useScrollSnap.js"],"sourcesContent":["// components/useScrollSnap.js\r\nimport { useEffect, useRef } from \"react\";\r\nimport { gsap } from \"gsap\";\r\nimport { ScrollToPlugin } from \"gsap/ScrollToPlugin\";\r\n\r\ngsap.registerPlugin(ScrollToPlugin);\r\n\r\nexport default function useScrollSnap({\r\n  selector = \"section\",\r\n  duration = 0.8,\r\n  deadZone = 0.2\r\n}) {\r\n  useEffect(() => {\r\n    let timeout;\r\n    let isAnimating = false;\r\n    const lastScrollY = { current: window.scrollY };\r\n    const sections = Array.from(document.querySelectorAll(selector));\r\n\r\n    const scrollToY = (y) => {\r\n      isAnimating = true;\r\n      gsap.to(window, {\r\n        scrollTo: y,\r\n        duration,\r\n        ease: \"power2.out\",\r\n        onComplete: () => (isAnimating = false)\r\n      });\r\n    };\r\n\r\n    const onScroll = () => {\r\n      if (isAnimating) return;\r\n\r\n      if (timeout) clearTimeout(timeout);\r\n\r\n      timeout = setTimeout(() => {\r\n        const scrollY = window.scrollY;\r\n        const viewportHeight = window.innerHeight;\r\n\r\n        // detect scroll direction\r\n        const direction = scrollY > lastScrollY.current ? \"down\" : \"up\";\r\n        lastScrollY.current = scrollY;\r\n\r\n        // find current section index\r\n        let currentIndex = sections.findIndex((el) => {\r\n          const elTop = el.offsetTop;\r\n          const elHeight = el.offsetHeight;\r\n          const elBottom = elTop + elHeight;\r\n          return scrollY >= elTop && scrollY < elBottom;\r\n        });\r\n\r\n        // fallback if we’re above first section or below last section\r\n        if (currentIndex === -1) {\r\n          currentIndex = scrollY < sections[0].offsetTop ? 0 : sections.length - 1;\r\n        }\r\n\r\n        // if section is taller than viewport and we’re in deadzone → don’t snap\r\n        const el = sections[currentIndex];\r\n        const elTop = el.offsetTop;\r\n        const elHeight = el.offsetHeight;\r\n        const elBottom = elTop + elHeight;\r\n        const deadZoneTop = elTop + elHeight * deadZone;\r\n        const deadZoneBottom = elBottom - elHeight * deadZone;\r\n        if (\r\n          elHeight > viewportHeight &&\r\n          scrollY > deadZoneTop &&\r\n          scrollY < deadZoneBottom\r\n        ) {\r\n          return; // allow free scroll inside deadzone\r\n        }\r\n\r\n        // pick next or prev section based on direction\r\n        let targetIndex = currentIndex;\r\n        if (direction === \"down\" && currentIndex < sections.length - 1) {\r\n          targetIndex = currentIndex + 1;\r\n        } else if (direction === \"up\" && currentIndex > 0) {\r\n          targetIndex = currentIndex - 1;\r\n        }\r\n\r\n        scrollToY(sections[targetIndex].offsetTop);\r\n      }, 200);\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", onScroll);\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, [selector, duration, deadZone]);\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}