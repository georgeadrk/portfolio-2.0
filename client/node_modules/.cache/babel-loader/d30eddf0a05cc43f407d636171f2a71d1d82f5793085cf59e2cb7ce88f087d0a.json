{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useScrollSnap.js\nimport { useEffect } from \"react\";\nexport default function useScrollSnap(selector = \"section\", duration = 500, offset = 0, threshold = 0.3) {\n  _s();\n  useEffect(() => {\n    const targets = document.querySelectorAll(selector);\n    if (!targets.length) return;\n    let isScrolling = false;\n    let lastScrollY = window.scrollY;\n    let timeout;\n    function snapScroll(direction) {\n      if (isScrolling) return;\n      const currentScroll = window.scrollY;\n      const viewportHeight = window.innerHeight;\n\n      // find which section we’re in\n      let targetIndex = 0;\n      targets.forEach((el, i) => {\n        const elTop = el.offsetTop;\n        if (currentScroll >= elTop - viewportHeight * threshold) {\n          targetIndex = i;\n        }\n      });\n\n      // decide where to go based on scroll direction\n      let nextIndex = targetIndex;\n      if (direction === \"down\" && targetIndex < targets.length - 1) {\n        nextIndex = targetIndex + 1;\n      } else if (direction === \"up\" && targetIndex > 0) {\n        nextIndex = targetIndex;\n      }\n      const snapEl = targets[nextIndex];\n      if (snapEl) {\n        isScrolling = true;\n        window.scrollTo({\n          top: snapEl.offsetTop + offset,\n          behavior: \"smooth\"\n        });\n        timeout = setTimeout(() => {\n          isScrolling = false;\n        }, duration);\n      }\n    }\n\n    // listen to scroll stop\n    let scrollTimeout;\n    const onScroll = () => {\n      clearTimeout(scrollTimeout);\n      const direction = window.scrollY > lastScrollY ? \"down\" : \"up\";\n      lastScrollY = window.scrollY;\n      scrollTimeout = setTimeout(() => {\n        snapScroll(direction);\n      }, 80);\n    };\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n      clearTimeout(timeout);\n    };\n  }, [selector, duration, offset, threshold]);\n}\n_s(useScrollSnap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"names":["useEffect","useScrollSnap","selector","duration","offset","threshold","_s","targets","document","querySelectorAll","length","isScrolling","lastScrollY","window","scrollY","timeout","snapScroll","direction","currentScroll","viewportHeight","innerHeight","targetIndex","forEach","el","i","elTop","offsetTop","nextIndex","snapEl","scrollTo","top","behavior","setTimeout","scrollTimeout","onScroll","clearTimeout","addEventListener","removeEventListener"],"sources":["C:/Users/georg/projects/Fullstack/portofolio-2.0/client/src/components/useScrollSnap.js"],"sourcesContent":["// src/hooks/useScrollSnap.js\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function useScrollSnap(selector = \"section\", duration = 500, offset = 0, threshold = 0.3) {\r\n  useEffect(() => {\r\n    const targets = document.querySelectorAll(selector);\r\n    if (!targets.length) return;\r\n\r\n    let isScrolling = false;\r\n    let lastScrollY = window.scrollY;\r\n    let timeout;\r\n\r\n    function snapScroll(direction) {\r\n      if (isScrolling) return;\r\n\r\n      const currentScroll = window.scrollY;\r\n      const viewportHeight = window.innerHeight;\r\n\r\n      // find which section we’re in\r\n      let targetIndex = 0;\r\n      targets.forEach((el, i) => {\r\n        const elTop = el.offsetTop;\r\n        if (currentScroll >= elTop - viewportHeight * threshold) {\r\n          targetIndex = i;\r\n        }\r\n      });\r\n\r\n      // decide where to go based on scroll direction\r\n      let nextIndex = targetIndex;\r\n      if (direction === \"down\" && targetIndex < targets.length - 1) {\r\n        nextIndex = targetIndex + 1;\r\n      } else if (direction === \"up\" && targetIndex > 0) {\r\n        nextIndex = targetIndex;\r\n      }\r\n\r\n      const snapEl = targets[nextIndex];\r\n      if (snapEl) {\r\n        isScrolling = true;\r\n        window.scrollTo({\r\n          top: snapEl.offsetTop + offset,\r\n          behavior: \"smooth\",\r\n        });\r\n\r\n        timeout = setTimeout(() => {\r\n          isScrolling = false;\r\n        }, duration);\r\n      }\r\n    }\r\n\r\n    // listen to scroll stop\r\n    let scrollTimeout;\r\n    const onScroll = () => {\r\n      clearTimeout(scrollTimeout);\r\n\r\n      const direction = window.scrollY > lastScrollY ? \"down\" : \"up\";\r\n      lastScrollY = window.scrollY;\r\n\r\n      scrollTimeout = setTimeout(() => {\r\n        snapScroll(direction);\r\n      }, 80);\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [selector, duration, offset, threshold]);\r\n}"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;AAEjC,eAAe,SAASC,aAAaA,CAACC,QAAQ,GAAG,SAAS,EAAEC,QAAQ,GAAG,GAAG,EAAEC,MAAM,GAAG,CAAC,EAAEC,SAAS,GAAG,GAAG,EAAE;EAAAC,EAAA;EACvGN,SAAS,CAAC,MAAM;IACd,MAAMO,OAAO,GAAGC,QAAQ,CAACC,gBAAgB,CAACP,QAAQ,CAAC;IACnD,IAAI,CAACK,OAAO,CAACG,MAAM,EAAE;IAErB,IAAIC,WAAW,GAAG,KAAK;IACvB,IAAIC,WAAW,GAAGC,MAAM,CAACC,OAAO;IAChC,IAAIC,OAAO;IAEX,SAASC,UAAUA,CAACC,SAAS,EAAE;MAC7B,IAAIN,WAAW,EAAE;MAEjB,MAAMO,aAAa,GAAGL,MAAM,CAACC,OAAO;MACpC,MAAMK,cAAc,GAAGN,MAAM,CAACO,WAAW;;MAEzC;MACA,IAAIC,WAAW,GAAG,CAAC;MACnBd,OAAO,CAACe,OAAO,CAAC,CAACC,EAAE,EAAEC,CAAC,KAAK;QACzB,MAAMC,KAAK,GAAGF,EAAE,CAACG,SAAS;QAC1B,IAAIR,aAAa,IAAIO,KAAK,GAAGN,cAAc,GAAGd,SAAS,EAAE;UACvDgB,WAAW,GAAGG,CAAC;QACjB;MACF,CAAC,CAAC;;MAEF;MACA,IAAIG,SAAS,GAAGN,WAAW;MAC3B,IAAIJ,SAAS,KAAK,MAAM,IAAII,WAAW,GAAGd,OAAO,CAACG,MAAM,GAAG,CAAC,EAAE;QAC5DiB,SAAS,GAAGN,WAAW,GAAG,CAAC;MAC7B,CAAC,MAAM,IAAIJ,SAAS,KAAK,IAAI,IAAII,WAAW,GAAG,CAAC,EAAE;QAChDM,SAAS,GAAGN,WAAW;MACzB;MAEA,MAAMO,MAAM,GAAGrB,OAAO,CAACoB,SAAS,CAAC;MACjC,IAAIC,MAAM,EAAE;QACVjB,WAAW,GAAG,IAAI;QAClBE,MAAM,CAACgB,QAAQ,CAAC;UACdC,GAAG,EAAEF,MAAM,CAACF,SAAS,GAAGtB,MAAM;UAC9B2B,QAAQ,EAAE;QACZ,CAAC,CAAC;QAEFhB,OAAO,GAAGiB,UAAU,CAAC,MAAM;UACzBrB,WAAW,GAAG,KAAK;QACrB,CAAC,EAAER,QAAQ,CAAC;MACd;IACF;;IAEA;IACA,IAAI8B,aAAa;IACjB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;MACrBC,YAAY,CAACF,aAAa,CAAC;MAE3B,MAAMhB,SAAS,GAAGJ,MAAM,CAACC,OAAO,GAAGF,WAAW,GAAG,MAAM,GAAG,IAAI;MAC9DA,WAAW,GAAGC,MAAM,CAACC,OAAO;MAE5BmB,aAAa,GAAGD,UAAU,CAAC,MAAM;QAC/BhB,UAAU,CAACC,SAAS,CAAC;MACvB,CAAC,EAAE,EAAE,CAAC;IACR,CAAC;IAEDJ,MAAM,CAACuB,gBAAgB,CAAC,QAAQ,EAAEF,QAAQ,CAAC;IAE3C,OAAO,MAAM;MACXrB,MAAM,CAACwB,mBAAmB,CAAC,QAAQ,EAAEH,QAAQ,CAAC;MAC9CC,YAAY,CAACpB,OAAO,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,CAACb,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,CAAC,CAAC;AAC7C;AAACC,EAAA,CAlEuBL,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}