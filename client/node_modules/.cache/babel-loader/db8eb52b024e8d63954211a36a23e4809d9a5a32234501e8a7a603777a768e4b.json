{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nexport default function useSmartScrollSnap({\n  selector = 'section',\n  // or your own scroll targets\n  duration = 500,\n  threshold = 0.5\n}) {\n  _s();\n  useEffect(() => {\n    let timeout;\n    const sections = Array.from(document.querySelectorAll(selector));\n    const onScroll = () => {\n      if (timeout) clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        const scrollY = window.scrollY;\n        const viewportHeight = window.innerHeight;\n\n        // Find which section we’re in\n        let snapTarget = null;\n        for (let i = 0; i < sections.length; i++) {\n          const el = sections[i];\n          const rect = el.getBoundingClientRect();\n          const elTop = rect.top + scrollY; // absolute top\n          const elHeight = el.offsetHeight;\n          const elBottom = elTop + elHeight;\n\n          // if element is shorter than viewport → snap normally\n          if (elHeight <= viewportHeight) {\n            if (scrollY + viewportHeight * threshold >= elTop && scrollY + viewportHeight * threshold < elBottom) {\n              snapTarget = el;\n              break;\n            }\n          } else {\n            // element taller than viewport → only snap when near its edges\n            if (scrollY < elTop - 50) {\n              snapTarget = el;\n              break;\n            } else if (scrollY > elBottom - viewportHeight + 50) {\n              snapTarget = sections[i + 1]; // next section\n              break;\n            }\n            // else we’re inside tall section, do nothing\n          }\n        }\n        if (snapTarget) {\n          snapTarget.scrollIntoView({\n            behavior: 'smooth',\n            block: 'start'\n          });\n        }\n      }, 100); // small debounce\n    };\n    window.addEventListener('scroll', onScroll);\n    return () => window.removeEventListener('scroll', onScroll);\n  }, [selector, duration, threshold]);\n}\n_s(useSmartScrollSnap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"names":["useEffect","useSmartScrollSnap","selector","duration","threshold","_s","timeout","sections","Array","from","document","querySelectorAll","onScroll","clearTimeout","setTimeout","scrollY","window","viewportHeight","innerHeight","snapTarget","i","length","el","rect","getBoundingClientRect","elTop","top","elHeight","offsetHeight","elBottom","scrollIntoView","behavior","block","addEventListener","removeEventListener"],"sources":["C:/Users/georg/projects/Fullstack/portofolio-2.0/client/src/components/useScrollSnap.js"],"sourcesContent":["import { useEffect } from 'react';\r\n\r\nexport default function useSmartScrollSnap({\r\n  selector = 'section',   // or your own scroll targets\r\n  duration = 500,\r\n  threshold = 0.5\r\n}) {\r\n  useEffect(() => {\r\n    let timeout;\r\n    const sections = Array.from(document.querySelectorAll(selector));\r\n\r\n    const onScroll = () => {\r\n      if (timeout) clearTimeout(timeout);\r\n      timeout = setTimeout(() => {\r\n        const scrollY = window.scrollY;\r\n        const viewportHeight = window.innerHeight;\r\n\r\n        // Find which section we’re in\r\n        let snapTarget = null;\r\n\r\n        for (let i = 0; i < sections.length; i++) {\r\n          const el = sections[i];\r\n          const rect = el.getBoundingClientRect();\r\n          const elTop = rect.top + scrollY; // absolute top\r\n          const elHeight = el.offsetHeight;\r\n          const elBottom = elTop + elHeight;\r\n\r\n          // if element is shorter than viewport → snap normally\r\n          if (elHeight <= viewportHeight) {\r\n            if (\r\n              scrollY + viewportHeight * threshold >= elTop &&\r\n              scrollY + viewportHeight * threshold < elBottom\r\n            ) {\r\n              snapTarget = el;\r\n              break;\r\n            }\r\n          } else {\r\n            // element taller than viewport → only snap when near its edges\r\n            if (scrollY < elTop - 50) {\r\n              snapTarget = el;\r\n              break;\r\n            } else if (scrollY > elBottom - viewportHeight + 50) {\r\n              snapTarget = sections[i + 1]; // next section\r\n              break;\r\n            }\r\n            // else we’re inside tall section, do nothing\r\n          }\r\n        }\r\n\r\n        if (snapTarget) {\r\n          snapTarget.scrollIntoView({\r\n            behavior: 'smooth',\r\n            block: 'start'\r\n          });\r\n        }\r\n      }, 100); // small debounce\r\n    };\r\n\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => window.removeEventListener('scroll', onScroll);\r\n  }, [selector, duration, threshold]);\r\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,eAAe,SAASC,kBAAkBA,CAAC;EACzCC,QAAQ,GAAG,SAAS;EAAI;EACxBC,QAAQ,GAAG,GAAG;EACdC,SAAS,GAAG;AACd,CAAC,EAAE;EAAAC,EAAA;EACDL,SAAS,CAAC,MAAM;IACd,IAAIM,OAAO;IACX,MAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAACC,QAAQ,CAACC,gBAAgB,CAACT,QAAQ,CAAC,CAAC;IAEhE,MAAMU,QAAQ,GAAGA,CAAA,KAAM;MACrB,IAAIN,OAAO,EAAEO,YAAY,CAACP,OAAO,CAAC;MAClCA,OAAO,GAAGQ,UAAU,CAAC,MAAM;QACzB,MAAMC,OAAO,GAAGC,MAAM,CAACD,OAAO;QAC9B,MAAME,cAAc,GAAGD,MAAM,CAACE,WAAW;;QAEzC;QACA,IAAIC,UAAU,GAAG,IAAI;QAErB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,QAAQ,CAACc,MAAM,EAAED,CAAC,EAAE,EAAE;UACxC,MAAME,EAAE,GAAGf,QAAQ,CAACa,CAAC,CAAC;UACtB,MAAMG,IAAI,GAAGD,EAAE,CAACE,qBAAqB,CAAC,CAAC;UACvC,MAAMC,KAAK,GAAGF,IAAI,CAACG,GAAG,GAAGX,OAAO,CAAC,CAAC;UAClC,MAAMY,QAAQ,GAAGL,EAAE,CAACM,YAAY;UAChC,MAAMC,QAAQ,GAAGJ,KAAK,GAAGE,QAAQ;;UAEjC;UACA,IAAIA,QAAQ,IAAIV,cAAc,EAAE;YAC9B,IACEF,OAAO,GAAGE,cAAc,GAAGb,SAAS,IAAIqB,KAAK,IAC7CV,OAAO,GAAGE,cAAc,GAAGb,SAAS,GAAGyB,QAAQ,EAC/C;cACAV,UAAU,GAAGG,EAAE;cACf;YACF;UACF,CAAC,MAAM;YACL;YACA,IAAIP,OAAO,GAAGU,KAAK,GAAG,EAAE,EAAE;cACxBN,UAAU,GAAGG,EAAE;cACf;YACF,CAAC,MAAM,IAAIP,OAAO,GAAGc,QAAQ,GAAGZ,cAAc,GAAG,EAAE,EAAE;cACnDE,UAAU,GAAGZ,QAAQ,CAACa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;cAC9B;YACF;YACA;UACF;QACF;QAEA,IAAID,UAAU,EAAE;UACdA,UAAU,CAACW,cAAc,CAAC;YACxBC,QAAQ,EAAE,QAAQ;YAClBC,KAAK,EAAE;UACT,CAAC,CAAC;QACJ;MACF,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACX,CAAC;IAEDhB,MAAM,CAACiB,gBAAgB,CAAC,QAAQ,EAAErB,QAAQ,CAAC;IAC3C,OAAO,MAAMI,MAAM,CAACkB,mBAAmB,CAAC,QAAQ,EAAEtB,QAAQ,CAAC;EAC7D,CAAC,EAAE,CAACV,QAAQ,EAAEC,QAAQ,EAAEC,SAAS,CAAC,CAAC;AACrC;AAACC,EAAA,CA3DuBJ,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}