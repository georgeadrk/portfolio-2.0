{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nexport default function useScrollSnap() {\n  _s();\n  useEffect(() => {\n    const sections = document.querySelectorAll(\"section\");\n    let isScrolling = false;\n    const handleScroll = e => {\n      if (isScrolling) return;\n      const currentScroll = window.scrollY;\n      const viewportHeight = window.innerHeight;\n      let closestSection = null;\n      let closestDistance = Infinity;\n      sections.forEach(section => {\n        const sectionTop = section.offsetTop;\n        const distance = Math.abs(currentScroll - sectionTop);\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestSection = section;\n        }\n      });\n      if (closestSection) {\n        isScrolling = true;\n        window.scrollTo({\n          top: closestSection.offsetTop,\n          behavior: \"smooth\"\n        });\n        setTimeout(() => isScrolling = false, 700);\n      }\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n}\n_s(useScrollSnap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"names":["useEffect","useScrollSnap","_s","sections","document","querySelectorAll","isScrolling","handleScroll","e","currentScroll","window","scrollY","viewportHeight","innerHeight","closestSection","closestDistance","Infinity","forEach","section","sectionTop","offsetTop","distance","Math","abs","scrollTo","top","behavior","setTimeout","addEventListener","removeEventListener"],"sources":["C:/Users/georg/projects/Fullstack/portofolio-2.0/client/src/components/useScrollSnap.js"],"sourcesContent":["import { useEffect } from \"react\";\r\n\r\nexport default function useScrollSnap() {\r\n  useEffect(() => {\r\n    const sections = document.querySelectorAll(\"section\");\r\n    let isScrolling = false;\r\n\r\n    const handleScroll = (e) => {\r\n      if (isScrolling) return;\r\n\r\n      const currentScroll = window.scrollY;\r\n      const viewportHeight = window.innerHeight;\r\n\r\n      let closestSection = null;\r\n      let closestDistance = Infinity;\r\n\r\n      sections.forEach((section) => {\r\n        const sectionTop = section.offsetTop;\r\n        const distance = Math.abs(currentScroll - sectionTop);\r\n        if (distance < closestDistance) {\r\n          closestDistance = distance;\r\n          closestSection = section;\r\n        }\r\n      });\r\n\r\n      if (closestSection) {\r\n        isScrolling = true;\r\n        window.scrollTo({\r\n          top: closestSection.offsetTop,\r\n          behavior: \"smooth\",\r\n        });\r\n        setTimeout(() => (isScrolling = false), 700);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtCF,SAAS,CAAC,MAAM;IACd,MAAMG,QAAQ,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,SAAS,CAAC;IACrD,IAAIC,WAAW,GAAG,KAAK;IAEvB,MAAMC,YAAY,GAAIC,CAAC,IAAK;MAC1B,IAAIF,WAAW,EAAE;MAEjB,MAAMG,aAAa,GAAGC,MAAM,CAACC,OAAO;MACpC,MAAMC,cAAc,GAAGF,MAAM,CAACG,WAAW;MAEzC,IAAIC,cAAc,GAAG,IAAI;MACzB,IAAIC,eAAe,GAAGC,QAAQ;MAE9Bb,QAAQ,CAACc,OAAO,CAAEC,OAAO,IAAK;QAC5B,MAAMC,UAAU,GAAGD,OAAO,CAACE,SAAS;QACpC,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACd,aAAa,GAAGU,UAAU,CAAC;QACrD,IAAIE,QAAQ,GAAGN,eAAe,EAAE;UAC9BA,eAAe,GAAGM,QAAQ;UAC1BP,cAAc,GAAGI,OAAO;QAC1B;MACF,CAAC,CAAC;MAEF,IAAIJ,cAAc,EAAE;QAClBR,WAAW,GAAG,IAAI;QAClBI,MAAM,CAACc,QAAQ,CAAC;UACdC,GAAG,EAAEX,cAAc,CAACM,SAAS;UAC7BM,QAAQ,EAAE;QACZ,CAAC,CAAC;QACFC,UAAU,CAAC,MAAOrB,WAAW,GAAG,KAAM,EAAE,GAAG,CAAC;MAC9C;IACF,CAAC;IAEDI,MAAM,CAACkB,gBAAgB,CAAC,QAAQ,EAAErB,YAAY,CAAC;IAC/C,OAAO,MAAMG,MAAM,CAACmB,mBAAmB,CAAC,QAAQ,EAAEtB,YAAY,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;AACR;AAACL,EAAA,CApCuBD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}