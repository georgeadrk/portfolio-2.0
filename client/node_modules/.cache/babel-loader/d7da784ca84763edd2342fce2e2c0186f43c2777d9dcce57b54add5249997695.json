{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\georg\\\\projects\\\\Fullstack\\\\portofolio-2.0\\\\client\\\\src\\\\components\\\\ChatbotSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatbotSection() {\n  _s();\n  const [messages, setMessages] = useState([{\n    role: \"bot\",\n    text: \"Hi! Ask me anything about me.\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  async function handleSend(e) {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const newMessages = [...messages, {\n      role: \"user\",\n      text: input\n    }];\n    setMessages(newMessages);\n    setLoading(true);\n    try {\n      const res = await fetch(\"http://localhost:5000/api/ask\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          question: input\n        })\n      });\n      const data = await res.json();\n      const answer = data.answer || \"I’m not sure about that yet. (Check your server.)\";\n      setMessages(m => [...m, {\n        role: \"bot\",\n        text: answer\n      }]);\n    } catch (err) {\n      console.error(err);\n      setMessages(m => [...m, {\n        role: \"bot\",\n        text: \"Server error. Check console.\"\n      }]);\n    } finally {\n      setLoading(false);\n      setInput(\"\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"chatbot\",\n    className: \"py-24 px-6 max-w-5xl mx-auto text-center text-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-purpleAccent cursor-target\",\n      children: \"Ask Me Anything\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-4 text-gray-300 cursor-target\",\n      children: \"This is where your chatbot component will go. Visitors can ask questions about you.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md mx-auto p-4 bg-darkBlue text-white rounded-xl shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold mb-3\",\n        children: \"Chat with Me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-64 overflow-y-auto border border-purpleAccent rounded p-2 mb-2\",\n        children: [messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mb-2 ${m.role === \"user\" ? \"text-blue-400 text-right\" : \"text-purple-300\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: m.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-purple-500\",\n          children: \"Thinking\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSend,\n        className: \"flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"flex-1 p-2 rounded bg-gray-800 text-white\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type your question\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"inline-block bg-purpleAccent text-white rounded text-lg shadow-lg cursor-target glow-button\",\n          disabled: loading,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatbotSection, \"62EPnP8FTg0HjaXF2YqEVUU/ALM=\");\n_c = ChatbotSection;\nvar _c;\n$RefreshReg$(_c, \"ChatbotSection\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatbotSection","_s","messages","setMessages","role","text","input","setInput","loading","setLoading","handleSend","e","preventDefault","trim","newMessages","res","fetch","method","headers","body","JSON","stringify","question","data","json","answer","m","err","console","error","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","i","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/georg/projects/Fullstack/portofolio-2.0/client/src/components/ChatbotSection.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function ChatbotSection() {\r\n  const [messages, setMessages] = useState([\r\n    { role: \"bot\", text: \"Hi! Ask me anything about me.\" },\r\n  ]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  async function handleSend(e) {\r\n    e.preventDefault();\r\n    if (!input.trim()) return;\r\n    const newMessages = [...messages, { role: \"user\", text: input }];\r\n    setMessages(newMessages);\r\n    setLoading(true);\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/ask\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ question: input }),\r\n      });\r\n      const data = await res.json();\r\n      const answer = data.answer || \"I’m not sure about that yet. (Check your server.)\";\r\n      setMessages((m) => [...m, { role: \"bot\", text: answer }]);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMessages((m) => [...m, { role: \"bot\", text: \"Server error. Check console.\" }]);\r\n    } finally {\r\n      setLoading(false);\r\n      setInput(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section id=\"chatbot\" className=\"py-24 px-6 max-w-5xl mx-auto text-center text-gray-100\">\r\n      <h2 className=\"text-3xl font-bold mb-6 text-purpleAccent cursor-target\">Ask Me Anything</h2>\r\n      <p className=\"mb-4 text-gray-300 cursor-target\">This is where your chatbot component will go. Visitors can ask questions about you.</p>\r\n\r\n      <div className=\"max-w-md mx-auto p-4 bg-darkBlue text-white rounded-xl shadow-lg\">\r\n        <h3 className=\"text-xl font-bold mb-3\">Chat with Me</h3>\r\n        <div className=\"h-64 overflow-y-auto border border-purpleAccent rounded p-2 mb-2\">\r\n          {messages.map((m, i) => (\r\n            <div key={i} className={`mb-2 ${m.role === \"user\" ? \"text-blue-400 text-right\" : \"text-purple-300\"}`}>\r\n              <span>{m.text}</span>\r\n            </div>\r\n          ))}\r\n          {loading && <div className=\"text-purple-500\">Thinking…</div>}\r\n        </div>\r\n\r\n        <form onSubmit={handleSend} className=\"flex gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"flex-1 p-2 rounded bg-gray-800 text-white\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Type your question…\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"inline-block bg-purpleAccent text-white rounded text-lg shadow-lg cursor-target glow-button\"\r\n            disabled={loading}\r\n          >\r\n            Send\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}