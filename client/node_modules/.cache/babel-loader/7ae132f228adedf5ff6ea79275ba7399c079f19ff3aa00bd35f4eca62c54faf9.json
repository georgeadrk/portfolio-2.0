{"ast":null,"code":"var _s = $RefreshSig$();\n// components/useScrollSnap.js\nimport { useEffect } from \"react\";\nimport { gsap } from \"gsap\";\nimport { ScrollToPlugin } from \"gsap/ScrollToPlugin\";\ngsap.registerPlugin(ScrollToPlugin);\nexport default function useScrollSnap({\n  selector = \"section\",\n  duration = 0.8,\n  deadZone = 0.25,\n  delayBetweenSnaps = 600 // ms\n}) {\n  _s();\n  useEffect(() => {\n    const sections = Array.from(document.querySelectorAll(selector));\n    let currentIndex = 0;\n    let isAnimating = false;\n    let lastSnap = 0;\n    const goToSection = index => {\n      if (index < 0 || index >= sections.length) return;\n      isAnimating = true;\n      currentIndex = index;\n      gsap.to(window, {\n        scrollTo: sections[index].offsetTop,\n        duration,\n        ease: \"power2.out\",\n        onComplete: () => {\n          isAnimating = false;\n          lastSnap = Date.now();\n        }\n      });\n    };\n    const onWheel = e => {\n      if (isAnimating) {\n        e.preventDefault();\n        return;\n      }\n      if (Date.now() - lastSnap < delayBetweenSnaps) {\n        // still in cooldown\n        return;\n      }\n      const scrollY = window.scrollY;\n      const viewportHeight = window.innerHeight;\n\n      // find section index\n      let index = 0;\n      for (let i = 0; i < sections.length; i++) {\n        if (scrollY >= sections[i].offsetTop - viewportHeight / 2) index = i;\n      }\n      currentIndex = index;\n      const currentSection = sections[index];\n      const elTop = currentSection.offsetTop;\n      const elHeight = currentSection.offsetHeight;\n      const elBottom = elTop + elHeight;\n      const delta = e.deltaY;\n\n      // tall section free scroll\n      if (elHeight > viewportHeight) {\n        const freeTop = elTop + elHeight * deadZone;\n        const freeBottom = elBottom - viewportHeight * deadZone;\n        if (scrollY < freeTop && delta < 0) {\n          // near top → snap up\n          goToSection(index - 1);\n          e.preventDefault();\n          return;\n        }\n        if (scrollY > freeBottom && delta > 0) {\n          // near bottom → snap down\n          goToSection(index + 1);\n          e.preventDefault();\n          return;\n        }\n\n        // inside free zone → let browser scroll normally\n        return;\n      }\n\n      // normal sections\n      if (delta > 0) {\n        goToSection(index + 1);\n        e.preventDefault();\n      } else if (delta < 0) {\n        goToSection(index - 1);\n        e.preventDefault();\n      }\n    };\n\n    // start at correct section\n    const scrollY = window.scrollY;\n    for (let i = 0; i < sections.length; i++) {\n      if (scrollY >= sections[i].offsetTop) currentIndex = i;\n    }\n\n    // important: passive:false lets us preventDefault\n    window.addEventListener(\"wheel\", onWheel, {\n      passive: false\n    });\n    return () => {\n      window.removeEventListener(\"wheel\", onWheel);\n    };\n  }, [selector, duration, deadZone, delayBetweenSnaps]);\n}\n_s(useScrollSnap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"names":["useEffect","gsap","ScrollToPlugin","registerPlugin","useScrollSnap","selector","duration","deadZone","delayBetweenSnaps","_s","sections","Array","from","document","querySelectorAll","currentIndex","isAnimating","lastSnap","goToSection","index","length","to","window","scrollTo","offsetTop","ease","onComplete","Date","now","onWheel","e","preventDefault","scrollY","viewportHeight","innerHeight","i","currentSection","elTop","elHeight","offsetHeight","elBottom","delta","deltaY","freeTop","freeBottom","addEventListener","passive","removeEventListener"],"sources":["C:/Users/georg/projects/Fullstack/portofolio-2.0/client/src/components/useScrollSnap.js"],"sourcesContent":["// components/useScrollSnap.js\r\nimport { useEffect } from \"react\";\r\nimport { gsap } from \"gsap\";\r\nimport { ScrollToPlugin } from \"gsap/ScrollToPlugin\";\r\n\r\ngsap.registerPlugin(ScrollToPlugin);\r\n\r\nexport default function useScrollSnap({\r\n  selector = \"section\",\r\n  duration = 0.8,\r\n  deadZone = 0.25,\r\n  delayBetweenSnaps = 600 // ms\r\n}) {\r\n  useEffect(() => {\r\n    const sections = Array.from(document.querySelectorAll(selector));\r\n    let currentIndex = 0;\r\n    let isAnimating = false;\r\n    let lastSnap = 0;\r\n\r\n    const goToSection = (index) => {\r\n      if (index < 0 || index >= sections.length) return;\r\n      isAnimating = true;\r\n      currentIndex = index;\r\n\r\n      gsap.to(window, {\r\n        scrollTo: sections[index].offsetTop,\r\n        duration,\r\n        ease: \"power2.out\",\r\n        onComplete: () => {\r\n          isAnimating = false;\r\n          lastSnap = Date.now();\r\n        }\r\n      });\r\n    };\r\n\r\n    const onWheel = (e) => {\r\n      if (isAnimating) {\r\n        e.preventDefault();\r\n        return;\r\n      }\r\n      if (Date.now() - lastSnap < delayBetweenSnaps) {\r\n        // still in cooldown\r\n        return;\r\n      }\r\n\r\n      const scrollY = window.scrollY;\r\n      const viewportHeight = window.innerHeight;\r\n\r\n      // find section index\r\n      let index = 0;\r\n      for (let i = 0; i < sections.length; i++) {\r\n        if (scrollY >= sections[i].offsetTop - viewportHeight / 2) index = i;\r\n      }\r\n      currentIndex = index;\r\n\r\n      const currentSection = sections[index];\r\n      const elTop = currentSection.offsetTop;\r\n      const elHeight = currentSection.offsetHeight;\r\n      const elBottom = elTop + elHeight;\r\n\r\n      const delta = e.deltaY;\r\n\r\n      // tall section free scroll\r\n      if (elHeight > viewportHeight) {\r\n        const freeTop = elTop + elHeight * deadZone;\r\n        const freeBottom = elBottom - viewportHeight * deadZone;\r\n\r\n        if (scrollY < freeTop && delta < 0) {\r\n          // near top → snap up\r\n          goToSection(index - 1);\r\n          e.preventDefault();\r\n          return;\r\n        }\r\n\r\n        if (scrollY > freeBottom && delta > 0) {\r\n          // near bottom → snap down\r\n          goToSection(index + 1);\r\n          e.preventDefault();\r\n          return;\r\n        }\r\n\r\n        // inside free zone → let browser scroll normally\r\n        return;\r\n      }\r\n\r\n      // normal sections\r\n      if (delta > 0) {\r\n        goToSection(index + 1);\r\n        e.preventDefault();\r\n      } else if (delta < 0) {\r\n        goToSection(index - 1);\r\n        e.preventDefault();\r\n      }\r\n    };\r\n\r\n    // start at correct section\r\n    const scrollY = window.scrollY;\r\n    for (let i = 0; i < sections.length; i++) {\r\n      if (scrollY >= sections[i].offsetTop) currentIndex = i;\r\n    }\r\n\r\n    // important: passive:false lets us preventDefault\r\n    window.addEventListener(\"wheel\", onWheel, { passive: false });\r\n\r\n    return () => {\r\n      window.removeEventListener(\"wheel\", onWheel);\r\n    };\r\n  }, [selector, duration, deadZone, delayBetweenSnaps]);\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}